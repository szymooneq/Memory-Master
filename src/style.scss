:root {
	--easy-primary: #38ef7d;
	--easy-primary: #38ef7d;
	--easy-secondary: #11998e;
	--medium-primary: #f7b733;
	--medium-secondary: #fc4a1a;
	--hard-primary: #ff512f;
	--hard-secondary: #dd2476;
}

* {
	margin: 0;
	padding: 0;
	box-sizing: border-box;
	font-family: Inter, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto,
		Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;
	font-weight: 700;
	-webkit-touch-callout: none;
	-webkit-user-select: none;
	-moz-user-select: none;
	-ms-user-select: none;
	user-select: none;
}

html,
body {
	overflow-x: hidden;
}

body {
	display: flex;
	flex-direction: column;
	justify-content: space-between;
	align-items: center;
	min-height: 100vh;
	background: linear-gradient(
		to right bottom,
		rgba(71, 118, 230, 1),
		rgba(142, 84, 233, 1)
	);
}

h1 {
	padding: 15px;
}

.modal {
	display: flex;
	align-items: center;
	justify-content: center;
	width: 100%;
	height: 100%;
	position: fixed;
	left: 0;
	top: 0;
	background-color: rgba(0, 0, 0, 0.6);
	z-index: 1;

	.modal-content {
		display: flex;
		flex-direction: column;
		gap: 1rem;
		padding: 2rem;
		font-size: 1.1rem;
		text-align: center;
		letter-spacing: 0.1rem;
		color: white;
		border-radius: 0.5rem;
		background-color: black;
		filter: drop-shadow(0 0 2em #646cffaa);

		.menuButton {
			margin: auto;
			padding: 0.5rem;
			width: calc(100% - 5rem);
			font-weight: 700;
			text-transform: uppercase;
			color: white;
			background: transparent;
			border: 1px solid;
			border-radius: 0.5rem;
			transition: all 0.2s;

			&[data-level='easy'] {
				border-color: green;
			}

			&[data-level='easy']:hover,
			&[data-level='easy']:focus {
				background-color: green;
			}

			&[data-level='medium'] {
				border-color: orange;
			}

			&[data-level='medium']:hover,
			&[data-level='medium']:focus {
				background-color: orange;
			}
			&[data-level='hard'] {
				border-color: red;
			}

			&[data-level='hard']:hover,
			&[data-level='hard']:focus {
				background-color: red;
			}

			&:hover,
			&:focus {
				color: black;
				cursor: pointer;
			}
		}

		.playAgain {
			padding: 0.4rem;
			text-transform: uppercase;
			font-weight: 700;
			letter-spacing: 0.2rem;
			color: white;
			background-color: black;
			border: 1px solid #ffa600;
			transition: all 0.2s;

			&:hover,
			&:focus {
				color: black;
				background-color: #ffa600;
				cursor: pointer;
			}
		}
	}
}

#app {
	max-width: 100vw;
	overflow-x: auto !important;
}

.game {
	width: max-content;
	color: white;
	background-color: black;

	.gameBoard {
		padding: 0.3rem;
		display: grid;
		grid-template-columns: repeat(5, 1fr);
		gap: 0.3rem;

		.gameCard {
			position: relative;

			&:hover,
			&:focus {
				cursor: pointer;

				.front {
					opacity: 1;
				}
			}

			&.active:hover,
			&.active:focus {
				cursor: default;
			}

			&.active {
				.front {
					opacity: 0;
					transform: rotateY(180deg);
				}

				.back {
					opacity: 1;
					transform: rotateY(0deg);
				}
			}

			&.done {
				filter: brightness(30%);
				transition: all 0.5s;
			}

			&.shake {
				animation: shakeAnimation 0.9s;
				backface-visibility: hidden;
			}

			.front,
			.back {
				display: block;
				transition-property: transform, opacity;
				transition-duration: 0.6s;
				transition-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1.275);
			}

			.front {
				width: 100%;
				height: 100%;
				opacity: 0.7;
				transform: rotateY(0deg);
			}

			.back {
				position: absolute;
				opacity: 0;
				top: 0px;
				left: 0px;
				width: 100%;
				height: 100%;
				transform: rotateY(-180deg);
				background-size: contain;
			}
		}
	}

	.gameDetails {
		padding: 1rem;
		display: flex;
		align-items: center;
		justify-content: space-between;
		position: relative;

		.reset {
			display: flex;
			align-items: center;
			justify-content: center;
			padding: 0.3rem;
			font-size: 1.5rem;
			font-weight: 700;
			color: dodgerblue;
			background: transparent;
			border: 1px solid dodgerblue;
			border-radius: 0.5rem;
			transition: all 0.3s;

			&:hover,
			&:focus {
				color: black;
				background-color: dodgerblue;
				cursor: pointer;
			}
		}
	}

	&[data-level='easy'] {
		.gameBoard {
			grid-template-columns: repeat(4, 1fr);

			.gameCard {
				width: 5.2rem;
				height: 5.2rem;

				.front {
					background: linear-gradient(
						to right bottom,
						var(--easy-primary),
						var(--easy-secondary)
					);
				}
			}
		}

		.gameDetails {
			.level {
				color: var(--easy-primary);
			}
		}
	}

	&[data-level='medium'] {
		.gameBoard {
			grid-template-columns: repeat(5, 1fr);

			.gameCard {
				width: 4.05rem;
				height: 4.05rem;

				.front {
					background: linear-gradient(
						to right bottom,
						var(--medium-primary),
						var(--medium-secondary)
					);
				}
			}
		}

		.gameDetails {
			.level {
				color: var(--medium-primary);
			}
		}
	}

	&[data-level='hard'] {
		.gameBoard {
			grid-template-columns: repeat(6, 1fr);

			.gameCard {
				width: 3.3rem;
				height: 3.3rem;

				.front {
					background: linear-gradient(
						to right bottom,
						var(--hard-primary),
						var(--hard-secondary)
					);
				}
			}
		}

		.gameDetails {
			.level {
				color: var(--hard-primary);
			}
		}
	}
}

.moves {
	color: dodgerblue;
}

.score {
	color: #ffa600;
}

@keyframes shakeAnimation {
	0% {
		transform: rotate(0deg) scale(1);
	}
	25% {
		transform: rotate(5deg) scale(1.1);
	}
	75% {
		transform: rotate(-5deg) scale(1.1);
	}
	100% {
		transform: rotate(0deg) scale(1);
	}
}

footer {
	margin: 0 auto;
	padding: 0.5rem;
	display: block;
	width: max-content;
	font-weight: 700;
	color: black;

	a {
		font-style: italic;
		color: white;
		text-decoration: none;

		&:hover,
		&:focus {
			text-decoration: underline;
		}

		&:active {
			opacity: 0.5;
		}
	}
}

@media (min-width: 360px) {
	#app {
		overflow-x: hidden !important;
	}
}

@media (min-width: 650px) {
	.game {
		.gameBoard {
			padding: 0.5rem;
			gap: 0.5rem;
		}

		&[data-level='easy'] {
			.gameBoard {
				.gameCard {
					width: 7rem;
					height: 7rem;
				}
			}
		}

		&[data-level='medium'] {
			.gameBoard {
				grid-template-columns: repeat(6, 1fr);
				.gameCard {
					width: 6rem;
					height: 6rem;
				}
			}
		}

		&[data-level='hard'] {
			.gameBoard {
				grid-template-columns: repeat(7, 1fr);
				.gameCard {
					width: 5rem;
					height: 5rem;
				}
			}
		}
	}
}

@media (min-width: 1400px) {
	.game {
		&[data-level='easy'] {
			.gameBoard {
				.gameCard {
					width: 8rem;
					height: 8rem;
				}
			}
		}

		&[data-level='medium'] {
			.gameBoard {
				.gameCard {
					width: 7rem;
					height: 7rem;
				}
			}
		}

		&[data-level='hard'] {
			.gameBoard {
				.gameCard {
					width: 6rem;
					height: 6rem;
				}
			}
		}
	}
}
